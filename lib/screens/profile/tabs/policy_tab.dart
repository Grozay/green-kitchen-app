import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:green_kitchen_app/theme/app_colors.dart';

class PolicyTab extends StatefulWidget {
  const PolicyTab({super.key});

  @override
  State<PolicyTab> createState() => _PolicyTabState();
}

class _PolicyTabState extends State<PolicyTab> {

  final List<Map<String, dynamic>> policies = [
    {
      'id': 'panel1',
      'title': 'üìã ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng',
      'icon': Icons.policy,
      'color': Colors.purple,
      'content': {
        'sections': [
          {
            'title': 'ƒêi·ªÅu kho·∫£n chung',
            'items': [
              'B·∫±ng vi·ªác s·ª≠ d·ª•ng d·ªãch v·ª•, b·∫°n ƒë·ªìng √Ω tu√¢n th·ªß c√°c ƒëi·ªÅu kho·∫£n n√†y',
              'Ch√∫ng t√¥i c√≥ quy·ªÅn thay ƒë·ªïi ƒëi·ªÅu kho·∫£n m√† kh√¥ng c·∫ßn b√°o tr∆∞·ªõc',
              'M·ªçi tranh ch·∫•p s·∫Ω ƒë∆∞·ª£c gi·∫£i quy·∫øt theo lu·∫≠t ph√°p Vi·ªát Nam'
            ]
          },
          {
            'title': 'Quy·ªÅn v√† nghƒ©a v·ª•',
            'items': [
              'B·∫°n c√≥ quy·ªÅn s·ª≠ d·ª•ng d·ªãch v·ª• m·ªôt c√°ch h·ª£p ph√°p',
              'Kh√¥ng ƒë∆∞·ª£c s·ª≠ d·ª•ng d·ªãch v·ª• cho m·ª•c ƒë√≠ch b·∫•t h·ª£p ph√°p',
              'B·∫£o m·∫≠t th√¥ng tin t√†i kho·∫£n c·ªßa m√¨nh'
            ]
          }
        ]
      }
    },
    {
      'id': 'panel2',
      'title': 'üîí Ch√≠nh s√°ch b·∫£o m·∫≠t',
      'icon': Icons.security,
      'color': Colors.blue,
      'content': {
        'sections': [
          {
            'title': 'Thu th·∫≠p th√¥ng tin',
            'items': [
              'Th√¥ng tin c√° nh√¢n: t√™n, email, s·ªë ƒëi·ªán tho·∫°i, ƒë·ªãa ch·ªâ',
              'Th√¥ng tin ƒë∆°n h√†ng: m√≥n ƒÉn, th·ªùi gian, ƒë·ªãa ƒëi·ªÉm giao h√†ng',
              'Th√¥ng tin thanh to√°n: ph∆∞∆°ng th·ª©c, s·ªë ti·ªÅn (kh√¥ng l∆∞u th√¥ng tin th·∫ª)'
            ]
          },
          {
            'title': 'S·ª≠ d·ª•ng th√¥ng tin',
            'items': [
              'X·ª≠ l√Ω ƒë∆°n h√†ng v√† giao h√†ng',
              'G·ª≠i th√¥ng b√°o v√† c·∫≠p nh·∫≠t d·ªãch v·ª•',
              'C·∫£i thi·ªán ch·∫•t l∆∞·ª£ng d·ªãch v·ª• v√† tr·∫£i nghi·ªám ng∆∞·ªùi d√πng'
            ]
          },
          {
            'title': 'B·∫£o v·ªá th√¥ng tin',
            'items': [
              'M√£ h√≥a SSL/TLS cho m·ªçi giao d·ªãch',
              'Kh√¥ng chia s·∫ª th√¥ng tin v·ªõi b√™n th·ª© ba',
              'Tu√¢n th·ªß quy ƒë·ªãnh GDPR v√† Lu·∫≠t B·∫£o v·ªá d·ªØ li·ªáu c√° nh√¢n'
            ]
          }
        ]
      }
    },
    {
      'id': 'panel3',
      'title': 'üçΩÔ∏è Ch√≠nh s√°ch ƒë·∫∑t h√†ng',
      'icon': Icons.verified_user,
      'color': Colors.green,
      'content': {
        'sections': [
          {
            'title': 'Quy tr√¨nh ƒë·∫∑t h√†ng',
            'items': [
              'Ch·ªçn m√≥n ƒÉn t·ª´ menu v√† th√™m v√†o gi·ªè h√†ng',
              'X√°c nh·∫≠n ƒë·ªãa ch·ªâ giao h√†ng v√† th√¥ng tin thanh to√°n',
              'Nh·∫≠n x√°c nh·∫≠n ƒë∆°n h√†ng qua email/SMS'
            ]
          },
          {
            'title': 'Ch√≠nh s√°ch h·ªßy ƒë∆°n',
            'items': [
              'C√≥ th·ªÉ h·ªßy ƒë∆°n h√†ng trong v√≤ng 5 ph√∫t sau khi ƒë·∫∑t',
              'Sau 5 ph√∫t, ƒë∆°n h√†ng s·∫Ω ƒë∆∞·ª£c x·ª≠ l√Ω v√† kh√¥ng th·ªÉ h·ªßy',
              'Li√™n h·ªá hotline ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ trong tr∆∞·ªùng h·ª£p ƒë·∫∑c bi·ªát'
            ]
          },
          {
            'title': 'Th·ªùi gian giao h√†ng',
            'items': [
              'Giao h√†ng trong v√≤ng 30-60 ph√∫t t√πy thu·ªôc kho·∫£ng c√°ch',
              'Th√¥ng b√°o tr∆∞·ªõc 10 ph√∫t khi ƒë·∫øn giao h√†ng',
              'B·ªìi th∆∞·ªùng n·∫øu giao h√†ng tr·ªÖ qu√° 15 ph√∫t so v·ªõi cam k·∫øt'
            ]
          }
        ]
      }
    },
    {
      'id': 'panel4',
      'title': 'üí∞ Ch√≠nh s√°ch thanh to√°n',
      'icon': Icons.gavel,
      'color': Colors.orange,
      'content': {
        'sections': [
          {
            'title': 'Ph∆∞∆°ng th·ª©c thanh to√°n',
            'items': [
              'Ti·ªÅn m·∫∑t khi nh·∫≠n h√†ng',
              'Chuy·ªÉn kho·∫£n ng√¢n h√†ng',
              'V√≠ ƒëi·ªán t·ª≠ (MoMo, ZaloPay, VNPay)',
              'Th·∫ª t√≠n d·ª•ng/ghi n·ª£ (Visa, Mastercard)'
            ]
          },
          {
            'title': 'B·∫£o m·∫≠t thanh to√°n',
            'items': [
              'M√£ h√≥a SSL 256-bit cho m·ªçi giao d·ªãch',
              'Kh√¥ng l∆∞u tr·ªØ th√¥ng tin th·∫ª t√≠n d·ª•ng',
              'Tu√¢n th·ªß ti√™u chu·∫©n PCI DSS'
            ]
          },
          {
            'title': 'Ho√†n ti·ªÅn v√† b·ªìi th∆∞·ªùng',
            'items': [
              'Ho√†n ti·ªÅn 100% n·∫øu m√≥n ƒÉn kh√¥ng ƒë√∫ng ch·∫•t l∆∞·ª£ng',
              'B·ªìi th∆∞·ªùng n·∫øu giao h√†ng tr·ªÖ ho·∫∑c sai ƒë·ªãa ch·ªâ',
              'X·ª≠ l√Ω ho√†n ti·ªÅn trong v√≤ng 3-5 ng√†y l√†m vi·ªác'
            ]
          }
        ]
      }
    },
    {
      'id': 'panel5',
      'title': 'üåü Ch√≠nh s√°ch th√†nh vi√™n',
      'icon': Icons.privacy_tip,
      'color': Colors.teal,
      'content': {
        'sections': [
          {
            'title': 'T√≠ch ƒëi·ªÉm th∆∞·ªüng',
            'items': [
              'T√≠ch 1 ƒëi·ªÉm cho m·ªói 10,000 VNƒê chi ti√™u',
              'ƒêi·ªÉm c√≥ hi·ªáu l·ª±c trong 12 th√°ng',
              'ƒê·ªïi ƒëi·ªÉm l·∫•y coupon gi·∫£m gi√° ho·∫∑c m√≥n ƒÉn mi·ªÖn ph√≠'
            ]
          },
          {
            'title': 'H·∫°ng th√†nh vi√™n',
            'items': [
              'ENERGY: Chi ti√™u 0-2 tri·ªáu VNƒê/6 th√°ng',
              'VITALITY: Chi ti√™u 2-5 tri·ªáu VNƒê/6 th√°ng',
              'RADIANCE: Chi ti√™u tr√™n 5 tri·ªáu VNƒê/6 th√°ng'
            ]
          },
          {
            'title': '∆Øu ƒë√£i ƒë·∫∑c bi·ªát',
            'items': [
              'Gi·∫£m gi√° theo h·∫°ng th√†nh vi√™n',
              '∆Øu ti√™n giao h√†ng cho h·∫°ng cao',
              'T·∫∑ng m√≥n khai v·ªã mi·ªÖn ph√≠ cho h·∫°ng RADIANCE'
            ]
          }
        ]
      }
    }
  ];

  @override
  Widget build(BuildContext context) {
    return WillPopScope(
      onWillPop: () async {
        if (Navigator.of(context).canPop()) {
          return true;
        }
        context.go('/profile');
        return false;
      },
      child: Scaffold(
        backgroundColor: AppColors.background,
        appBar: AppBar(
          backgroundColor: Colors.transparent,
          elevation: 0,
          leading: IconButton(
            icon: Icon(
              Icons.arrow_back_rounded,
              color: AppColors.textPrimary,
            ),
            onPressed: () => context.go('/profile'),
          ),
          title: Text(
            'Ch√≠nh s√°ch s·ª≠ d·ª•ng',
            style: TextStyle(
              color: AppColors.textPrimary,
              fontWeight: FontWeight.w600,
              fontSize: 20,
            ),
          ),
          centerTitle: true,
        ),
        body: SingleChildScrollView(
          padding: const EdgeInsets.all(16),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // Header Section
              Container(
                width: double.infinity,
                padding: const EdgeInsets.all(24),
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    colors: [
                      Colors.purple.shade600,
                      Colors.purple.shade400,
                    ],
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                  ),
                  borderRadius: BorderRadius.circular(20),
                  boxShadow: [
                    BoxShadow(
                      color: Colors.purple.withOpacity(0.3),
                      blurRadius: 20,
                      offset: const Offset(0, 8),
                    ),
                  ],
                ),
                child: Column(
                  children: [
                    Container(
                      padding: const EdgeInsets.all(16),
                      decoration: BoxDecoration(
                        color: Colors.white.withOpacity(0.2),
                        borderRadius: BorderRadius.circular(16),
                      ),
                      child: Icon(
                        Icons.policy,
                        size: 48,
                        color: Colors.white,
                      ),
                    ),
                    const SizedBox(height: 16),
                    Text(
                      'Ch√≠nh S√°ch S·ª≠ D·ª•ng',
                      style: TextStyle(
                        fontSize: 24,
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                        shadows: [
                          Shadow(
                            color: Colors.black.withOpacity(0.3),
                            blurRadius: 4,
                            offset: const Offset(0, 2),
                          ),
                        ],
                      ),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 8),
                    Text(
                      'Th√¥ng tin chi ti·∫øt v·ªÅ quy·ªÅn l·ª£i v√† nghƒ©a v·ª• khi s·ª≠ d·ª•ng d·ªãch v·ª•',
                      style: TextStyle(
                        fontSize: 16,
                        color: Colors.white.withOpacity(0.9),
                      ),
                      textAlign: TextAlign.center,
                    ),
                  ],
                ),
              ),

              const SizedBox(height: 24),

              // Quick Policy Summary
              Container(
                width: double.infinity,
                padding: const EdgeInsets.all(24),
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(16),
                  boxShadow: [
                    BoxShadow(
                      color: AppColors.shadow,
                      blurRadius: 12,
                      offset: const Offset(0, 4),
                    ),
                  ],
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      'üìã T√≥m t·∫Øt ch√≠nh s√°ch',
                      style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.w600,
                        color: AppColors.textPrimary,
                      ),
                    ),
                    const SizedBox(height: 20),
                    GridView.count(
                      crossAxisCount: 1,
                      shrinkWrap: true,
                      physics: const NeverScrollableScrollPhysics(),
                      crossAxisSpacing: 16,
                      mainAxisSpacing: 16,
                      childAspectRatio: 4,
                      children: [
                        _buildPolicySummaryCard(
                          icon: Icons.check_circle,
                          title: 'ƒê·∫∑t h√†ng d·ªÖ d√†ng',
                          desc: 'Quy tr√¨nh ƒë∆°n gi·∫£n, nhanh ch√≥ng',
                          color: Colors.green,
                        ),
                        _buildPolicySummaryCard(
                          icon: Icons.security,
                          title: 'B·∫£o m·∫≠t tuy·ªát ƒë·ªëi',
                          desc: 'Th√¥ng tin ƒë∆∞·ª£c m√£ h√≥a SSL/TLS',
                          color: Colors.blue,
                        ),
                        _buildPolicySummaryCard(
                          icon: Icons.verified_user,
                          title: 'Giao h√†ng ƒë√∫ng gi·ªù',
                          desc: 'Cam k·∫øt 30-60 ph√∫t',
                          color: Colors.orange,
                        ),
                        _buildPolicySummaryCard(
                          icon: Icons.policy,
                          title: 'Ho√†n ti·ªÅn 100%',
                          desc: 'N·∫øu kh√¥ng h√†i l√≤ng v·ªÅ ch·∫•t l∆∞·ª£ng',
                          color: Colors.purple,
                        ),
                      ],
                    ),
                  ],
                ),
              ),

              const SizedBox(height: 24),

              // Detailed Policies
              Container(
                width: double.infinity,
                padding: const EdgeInsets.all(24),
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(16),
                  boxShadow: [
                    BoxShadow(
                      color: AppColors.shadow,
                      blurRadius: 12,
                      offset: const Offset(0, 4),
                    ),
                  ],
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      'üìñ Chi ti·∫øt ch√≠nh s√°ch',
                      style: TextStyle(
                        fontSize: 20,
                        fontWeight: FontWeight.w600,
                        color: AppColors.textPrimary,
                      ),
                    ),
                    const SizedBox(height: 20),

                    // Policies accordion
                    ...policies.map((policy) => _buildPolicyAccordion(policy)),
                  ],
                ),
              ),

              const SizedBox(height: 24),

              // Important Notices
              Container(
                width: double.infinity,
                padding: const EdgeInsets.all(24),
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(16),
                  border: Border.all(
                    color: Colors.amber.shade400,
                    width: 2,
                  ),
                  boxShadow: [
                    BoxShadow(
                      color: AppColors.shadow,
                      blurRadius: 12,
                      offset: const Offset(0, 4),
                    ),
                  ],
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      children: [
                        Container(
                          padding: const EdgeInsets.all(12),
                          decoration: BoxDecoration(
                            color: Colors.amber.shade100,
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: Icon(
                            Icons.warning,
                            color: Colors.amber.shade600,
                            size: 24,
                          ),
                        ),
                        const SizedBox(width: 16),
                        Text(
                          'L∆∞u √Ω quan tr·ªçng',
                          style: TextStyle(
                            fontSize: 20,
                            fontWeight: FontWeight.w600,
                            color: Colors.amber.shade600,
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 20),

                    Row(
                      children: [
                        Expanded(
                          child: Container(
                            padding: const EdgeInsets.all(16),
                            decoration: BoxDecoration(
                              color: Colors.amber.shade50,
                              borderRadius: BorderRadius.circular(12),
                              border: Border.all(
                                color: Colors.amber.shade200,
                                width: 1,
                              ),
                            ),
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Text(
                                  '‚ö†Ô∏è ƒêi·ªÅu kho·∫£n thay ƒë·ªïi',
                                  style: TextStyle(
                                    fontSize: 16,
                                    fontWeight: FontWeight.w600,
                                    color: Colors.amber.shade800,
                                  ),
                                ),
                                const SizedBox(height: 8),
                                Text(
                                  'Ch√∫ng t√¥i c√≥ quy·ªÅn c·∫≠p nh·∫≠t ch√≠nh s√°ch n√†y b·∫•t c·ª© l√∫c n√†o. Nh·ªØng thay ƒë·ªïi s·∫Ω c√≥ hi·ªáu l·ª±c ngay khi ƒë∆∞·ª£c ƒëƒÉng t·∫£i tr√™n website.',
                                  style: TextStyle(
                                    fontSize: 14,
                                    color: Colors.amber.shade700,
                                    height: 1.4,
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ),
                        const SizedBox(width: 16),
                        Expanded(
                          child: Container(
                            padding: const EdgeInsets.all(16),
                            decoration: BoxDecoration(
                              color: Colors.blue.shade50,
                              borderRadius: BorderRadius.circular(12),
                              border: Border.all(
                                color: Colors.blue.shade200,
                                width: 1,
                              ),
                            ),
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Text(
                                  '‚ÑπÔ∏è Li√™n h·ªá h·ªó tr·ª£',
                                  style: TextStyle(
                                    fontSize: 16,
                                    fontWeight: FontWeight.w600,
                                    color: Colors.blue.shade800,
                                  ),
                                ),
                                const SizedBox(height: 8),
                                Text(
                                  'N·∫øu b·∫°n c√≥ th·∫Øc m·∫Øc v·ªÅ ch√≠nh s√°ch n√†y, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua: Email: policy@greenkitchen.com ho·∫∑c Hotline: 1900-xxxx',
                                  style: TextStyle(
                                    fontSize: 14,
                                    color: Colors.blue.shade700,
                                    height: 1.4,
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),

              const SizedBox(height: 24),

              // Policy Version and Last Updated
              Container(
                width: double.infinity,
                padding: const EdgeInsets.all(20),
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(16),
                  boxShadow: [
                    BoxShadow(
                      color: AppColors.shadow,
                      blurRadius: 12,
                      offset: const Offset(0, 4),
                    ),
                  ],
                ),
                child: Column(
                  children: [
                    Text(
                      'üìÑ Phi√™n b·∫£n ch√≠nh s√°ch: v2.1',
                      style: TextStyle(
                        fontSize: 16,
                        fontWeight: FontWeight.w600,
                        color: AppColors.textPrimary,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 8),
                    Text(
                      'üìÖ C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: 15/12/2024',
                      style: TextStyle(
                        fontSize: 14,
                        color: AppColors.textSecondary,
                      ),
                      textAlign: TextAlign.center,
                    ),
                    const SizedBox(height: 8),
                    Text(
                      '¬© 2024 Green Kitchen. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.',
                      style: TextStyle(
                        fontSize: 14,
                        color: AppColors.textSecondary,
                      ),
                      textAlign: TextAlign.center,
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildPolicySummaryCard({
    required IconData icon,
    required String title,
    required String desc,
    required Color color,
  }) {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: color.withOpacity(0.05),
        borderRadius: BorderRadius.circular(12),
        border: Border.all(
          color: color.withOpacity(0.1),
          width: 1,
        ),
      ),
      child: Row(
        children: [
          Container(
            padding: const EdgeInsets.all(8),
            decoration: BoxDecoration(
              color: color.withOpacity(0.1),
              borderRadius: BorderRadius.circular(8),
            ),
            child: Icon(
              icon,
              color: color,
              size: 20,
            ),
          ),
          const SizedBox(width: 12),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: TextStyle(
                    fontSize: 16,
                    fontWeight: FontWeight.w600,
                    color: AppColors.textPrimary,
                  ),
                ),
                const SizedBox(height: 2),
                Text(
                  desc,
                  style: TextStyle(
                    fontSize: 12,
                    color: AppColors.textSecondary,
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildPolicyAccordion(Map<String, dynamic> policy) {
    return ExpansionTile(
      tilePadding: const EdgeInsets.all(16),
      childrenPadding: const EdgeInsets.fromLTRB(16, 0, 16, 16),
      backgroundColor: Colors.transparent,
      collapsedBackgroundColor: Colors.transparent,
      title: Row(
        children: [
          Container(
            padding: const EdgeInsets.all(8),
            decoration: BoxDecoration(
              color: (policy['color'] as Color).withOpacity(0.1),
              borderRadius: BorderRadius.circular(8),
            ),
            child: Icon(
              policy['icon'] as IconData,
              color: policy['color'] as Color,
              size: 20,
            ),
          ),
          const SizedBox(width: 12),
          Text(
            policy['title'] as String,
            style: TextStyle(
              fontSize: 18,
              fontWeight: FontWeight.w600,
              color: AppColors.textPrimary,
            ),
          ),
        ],
      ),
      children: [
        Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            ...(policy['content']['sections'] as List).map<Widget>((section) =>
              Container(
                margin: const EdgeInsets.only(bottom: 16),
                padding: const EdgeInsets.all(16),
                decoration: BoxDecoration(
                  color: Colors.grey.shade50,
                  borderRadius: BorderRadius.circular(12),
                  border: Border.all(
                    color: Colors.grey.shade200,
                    width: 1,
                  ),
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      children: [
                        Icon(
                          Icons.info,
                          size: 18,
                          color: AppColors.textSecondary,
                        ),
                        const SizedBox(width: 8),
                        Text(
                          section['title'] as String,
                          style: TextStyle(
                            fontSize: 16,
                            fontWeight: FontWeight.w600,
                            color: AppColors.textPrimary,
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 12),
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: (section['items'] as List).map<Widget>((item) =>
                        Padding(
                          padding: const EdgeInsets.only(bottom: 8),
                          child: Row(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Container(
                                margin: const EdgeInsets.only(top: 6),
                                width: 4,
                                height: 4,
                                decoration: BoxDecoration(
                                  color: AppColors.textSecondary,
                                  shape: BoxShape.circle,
                                ),
                              ),
                              const SizedBox(width: 12),
                              Expanded(
                                child: Text(
                                  item as String,
                                  style: TextStyle(
                                    fontSize: 14,
                                    color: AppColors.textSecondary,
                                    height: 1.5,
                                  ),
                                ),
                              ),
                            ],
                          ),
                        )
                      ).toList(),
                    ),
                  ],
                ),
              )
            ),
          ],
        ),
      ],
      trailing: Container(
        padding: const EdgeInsets.all(8),
        decoration: BoxDecoration(
          color: (policy['color'] as Color).withOpacity(0.1),
          borderRadius: BorderRadius.circular(8),
        ),
        child: Icon(
          Icons.expand_more,
          color: policy['color'] as Color,
          size: 20,
        ),
      ),
      onExpansionChanged: (expanded) {
        // Handle expansion state if needed
      },
    );
  }
}
